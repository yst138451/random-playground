name: deploy

on:
  push:
    branches:
      - develop
      - 'release/**'
      - 'hotfix/**'
  workflow_call:
    inputs:
      environment_name:
        type: string
        required: true

jobs:
  get-env:
    if: github.event_name != 'workflow_call'
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.getEnv.outputs.env }}
    steps:
      - uses: actions/checkout@v4
      - id: getEnv
        uses: ./.github/actions/get-env
        with:
          prefix: 'yom-'

  first-job:
    needs: get-env
    name: Initial Job
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment_name || needs.get-env.outputs.env }}
    timeout-minutes: 7
    env:
      APP: ${{ vars.APP }}
      ENV: ${{ vars.ENV }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/unit-tests
        continue-on-error: false
      - name: Compile
        run: yarn build
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v4

  # notify:
  #   name: Notify Slack channel
  #   needs: deploy
  #   if: always() && !cancelled()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     # - name: Dump GitHub context
  #     #   env:
  #     #     GITHUB_CONTEXT: ${{ toJson(github) }}
  #     #   run: echo "$GITHUB_CONTEXT"

  #     - name: Set outputs
  #       id: vars
  #       run: |
  #         {
  #           echo "sha_short=$(git rev-parse --short HEAD)"
  #           echo "subject=$(git log --format=%s -n 1 HEAD)"
  #         } >> $GITHUB_OUTPUT

  #     - name: Notify Slack channel
  #       id: slack
  #       uses: slackapi/slack-github-action@v1.24.0
  #       with:
  #         channel-id: D01NHJ9QV51 # yom private DM
  #         payload: |
  #           {
  #             "blocks": [
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": "${{ needs.deploy.result == 'success' && ':white_check_mark:' || ':no_entry:' }} <${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }} | ${{ github.workflow }} #${{github.run_number}}> ${{ needs.deploy.result == 'success' && '*succeeded*' || '*failed*' }}."
  #                 }
  #               },
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": "> <${{ github.event.head_commit.url }} | `${{ steps.vars.outputs.sha_short }}`> ${{ steps.vars.outputs.subject }}\n> by *${{ github.event.head_commit.author.name }}*"
  #                 }
  #               }
  #             ]
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_FE_WEBHOOK_URL }}
  #         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
