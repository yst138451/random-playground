name: Get Environment Name
description: Parse github context and return an environment name

inputs:
  prefix:
    description: Prefix to prepend the resulting env with
    required: false
    default: ''

outputs:
  env:
    description: Environment name
    value: ${{ steps.getEnv.outputs.env }}

runs:
  using: composite
  steps:
    - id: getEnv
      shell: bash
      run: |
        if [[ '${{ github.event_name }}' == 'push' || '${{ github.event_name }}' == 'workflow_dispatch' ]]; then
          base_branch=${{ github.ref_name }}
        elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
          base_branch=${{ github.event.pull_request.base.ref }}
        else
          echo 'Unsupported event for this action'
          exit 1
        fi

        if [[ $base_branch == 'develop' ]]; then
          env=dev
        elif [[ $base_branch == release/* ]]; then
          env=test
        elif [[ $base_branch == hotfix/* ]]; then
          env=staging
        else
          exit 1
        fi

        prefix='${{ inputs.prefix }}'
        prefixed_env='${prefix}${env}'

        echo 'env=$prefixed_env' >> $GITHUB_OUTPUT
